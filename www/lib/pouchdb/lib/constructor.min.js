"use strict";function defaultCallback(e){e&&global.debug&&console.error(e)}function prepareForDestruction(e,t){function n(n){n===t.originalName&&(e.removeListener("destroyed",r),e.emit("destroyed",e))}function r(){PouchDB.removeListener("destroyed",n),PouchDB.emit("destroyed",t.originalName),PouchDB.emit(t.originalName,"destroyed")}PouchDB.once("destroyed",n),e.once("destroyed",r)}function PouchDB(e,t,n){if(!(this instanceof PouchDB))return new PouchDB(e,t,n);var r=this;("function"==typeof t||"undefined"==typeof t)&&(n=t,t={}),e&&"object"==typeof e&&(t=e,e=void 0),"undefined"==typeof n&&(n=defaultCallback),e=e||t.name,t=t?utils.clone(t):{},delete t.name,this.__opts=t;var i=n;r.auto_compaction=t.auto_compaction,r.prefix=PouchDB.prefix,Adapter.call(r),r.taskqueue=new TaskQueue;var a=new Promise(function(i,a){n=function(e,t){return e?a(e):(delete t.then,void i(t))},t=utils.clone(t);var s,u,o=t.name||e;return function(){try{if("string"!=typeof o)throw u=new Error("Missing/invalid DB name"),u.code=400,u;if(s=PouchDB.parseAdapter(o,t),t.originalName=o,t.name=s.name,t.prefix&&"http"!==s.adapter&&"https"!==s.adapter&&(t.name=t.prefix+t.name),t.adapter=t.adapter||s.adapter,r._adapter=t.adapter,debug("pouchdb:adapter")("Picked adapter: "+t.adapter),r._db_name=o,!PouchDB.adapters[t.adapter])throw u=new Error("Adapter is missing"),u.code=404,u;if(!PouchDB.adapters[t.adapter].valid())throw u=new Error("Invalid Adapter"),u.code=404,u}catch(e){r.taskqueue.fail(e)}}(),u?a(u):(r.adapter=t.adapter,r.replicate={},r.replicate.from=function(e,t,n){return r.constructor.replicate(e,r,t,n)},r.replicate.to=function(e,t,n){return r.constructor.replicate(r,e,t,n)},r.sync=function(e,t,n){return r.constructor.sync(r,e,t,n)},r.replicate.sync=r.sync,PouchDB.adapters[t.adapter].call(r,t,function(e){return e?void(n&&(r.taskqueue.fail(e),n(e))):(prepareForDestruction(r,t),r.emit("created",r),PouchDB.emit("created",t.originalName),r.taskqueue.ready(r),void n(null,r))}),t.skipSetup&&(r.taskqueue.ready(r),process.nextTick(function(){n(null,r)})),void(utils.isCordova()&&cordova.fireWindowEvent(t.name+"_pouch",{})))});a.then(function(e){i(null,e)},i),r.then=a.then.bind(a),r["catch"]=a["catch"].bind(a)}var debug=require("debug"),Adapter=require("./adapter"),utils=require("./utils"),TaskQueue=require("./taskqueue"),Promise=utils.Promise;utils.inherits(PouchDB,Adapter),PouchDB.debug=debug,module.exports=PouchDB;
