"use strict";function binarySearch(e,t,n){for(var a,r=0,i=e.length;i>r;)a=r+i>>>1,n(e[a],t)<0?r=a+1:i=a;return r}function insertSorted(e,t,n){var r=binarySearch(e,t,n);e.splice(r,0,t)}function pathToTree(e){for(var i,t=e.shift(),n=[t.id,t.opts,[]],r=n;e.length;)t=e.shift(),i=[t.id,t.opts,[]],r[2].push(i),r=i;return n}function compareTree(e,t){return e[0]<t[0]?-1:1}function mergeTree(e,t){for(var n=[{tree1:e,tree2:t}],r=!1;n.length>0;){var i=n.pop(),a=i.tree1,o=i.tree2;(a[1].status||o[1].status)&&(a[1].status="available"===a[1].status||"available"===o[1].status?"available":"missing");for(var s=0;s<o[2].length;s++)if(a[2][0]){for(var u=!1,c=0;c<a[2].length;c++)a[2][c][0]===o[2][s][0]&&(n.push({tree1:a[2][c],tree2:o[2][s]}),u=!0);u||(r="new_branch",insertSorted(a[2],o[2][s],compareTree))}else r="new_leaf",a[2][0]=o[2][s]}return{conflicts:r,tree:e}}function doMerge(e,t,n){var o,r=[],i=!1,a=!1;return e.length?(e.forEach(function(e){if(e.pos===t.pos&&e.ids[0]===t.ids[0])o=mergeTree(e.ids,t.ids),r.push({pos:e.pos,ids:o.tree}),i=i||o.conflicts,a=!0;else if(n!==!0){var s=e.pos<t.pos?e:t,u=e.pos<t.pos?t:e,c=u.pos-s.pos,l=[],f=[];for(f.push({ids:s.ids,diff:c,parent:null,parentIdx:null});f.length>0;){var d=f.pop();0!==d.diff?d.ids&&d.ids[2].forEach(function(e,t){f.push({ids:e,diff:d.diff-1,parent:d.ids,parentIdx:t})}):d.ids[0]===u.ids[0]&&l.push(d)}var p=l[0];p?(o=mergeTree(p.ids,u.ids),p.parent[2][p.parentIdx]=o.tree,r.push({pos:s.pos,ids:s.ids}),i=i||o.conflicts,a=!0):r.push(e)}else r.push(e)}),a||r.push(t),r.sort(function(e,t){return e.pos-t.pos}),{tree:r,conflicts:i||"internal_node"}):{tree:[t],conflicts:"new_leaf"}}function stem(e,t){var n=PouchMerge.rootToLeaf(e).map(function(e){var n=e.ids.slice(-t);return{pos:e.pos+(e.ids.length-n.length),ids:pathToTree(n)}});return n.reduce(function(e,t){return doMerge(e,t,!0).tree},[n.shift()])}var extend=require("pouchdb-extend"),PouchMerge={};PouchMerge.merge=function(e,t,n){e=extend(!0,[],e),t=extend(!0,{},t);var r=doMerge(e,t);return{tree:stem(r.tree,n),conflicts:r.conflicts}},PouchMerge.winningRev=function(e){var t=[];return PouchMerge.traverseRevTree(e.rev_tree,function(e,n,r,i,a){e&&t.push({pos:n,id:r,deleted:!!a.deleted})}),t.sort(function(e,t){return e.deleted!==t.deleted?e.deleted>t.deleted?1:-1:e.pos!==t.pos?t.pos-e.pos:e.id<t.id?1:-1}),t[0].pos+"-"+t[0].id},PouchMerge.traverseRevTree=function(e,t){for(var r,n=e.slice();r=n.pop();)for(var i=r.pos,a=r.ids,o=a[2],s=t(0===o.length,i,a[0],r.ctx,a[1]),u=0,c=o.length;c>u;u++)n.push({pos:i+1,ids:o[u],ctx:s})},PouchMerge.collectLeaves=function(e){var t=[];return PouchMerge.traverseRevTree(e,function(e,n,r,i,a){e&&t.push({rev:n+"-"+r,pos:n,opts:a})}),t.sort(function(e,t){return t.pos-e.pos}),t.forEach(function(e){delete e.pos}),t},PouchMerge.collectConflicts=function(e){var t=PouchMerge.winningRev(e),n=PouchMerge.collectLeaves(e.rev_tree),r=[];return n.forEach(function(e){e.rev===t||e.opts.deleted||r.push(e.rev)}),r},PouchMerge.rootToLeaf=function(e){var t=[];return PouchMerge.traverseRevTree(e,function(e,n,r,i,a){if(i=i?i.slice(0):[],i.push({id:r,opts:a}),e){var o=n+1-i.length;t.unshift({pos:o,ids:i})}return i}),t},module.exports=PouchMerge;
